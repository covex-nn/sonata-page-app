# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: "%env(ENV_locale)%"
    env(ENV_locale): en

    env(APP_SECRET): "%env(ENV_secret)%"
    env(ENV_secret): ThisTokenIsNotSoSecretChangeIt

    env(DATABASE_URL): "mysql://%env(ENV_database_user)%:%env(ENV_database_password)%@%env(ENV_database_host)%:%env(ENV_database_port)%/%env(ENV_database_name)%?charset=UTF8&serverVersion=%env(ENV_database_mysql_version)%"
    env(ENV_database_host): mysql
    env(ENV_database_port): 3306
    env(ENV_database_name): project
    env(ENV_database_user): project
    env(ENV_database_password): project
    env(ENV_database_mysql_version): "5.7"

    env(MAILER_URL): null://localhost
    env(MAILER_FROM_NAME): "No-reply"
    env(MAILER_FROM_ADDRESS): "no-reply@docker.local"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Admin\UserAdmin:
        arguments: [ ~, App\Entity\User, ~ ]
        public: true
        tags:
            - { name: sonata.admin, manager_type: orm, label: Users, group: Miscellaneous }
